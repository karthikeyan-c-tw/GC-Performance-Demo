apiVersion: v1
kind: Namespace
metadata:
  name: gc-demo
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: app-g1
  namespace: gc-demo
spec:
  replicas: 1
  selector:
    matchLabels:
      app: perf-demo-g1
      gc: g1
  template:
    metadata:
      labels:
        app: perf-demo-g1
        gc: g1
        prometheus.io/scrape: "true"
        prometheus.io/port: "8080"
    spec:
      containers:
        - name: g1-app
          image: load-app:latest
          imagePullPolicy: Never
          resources:
            requests:
              cpu: "500m"
              memory: "1Gi"
            limits:
              cpu: "1"
              memory: "1Gi"
          env:
            - name: JAVA_TOOL_OPTIONS
              value: "-Xms1g -Xmx1g -XX:+UseG1GC"
          ports:
            - containerPort: 8080
          readinessProbe:
            httpGet:
              path: /actuator/health
              port: 8080
            initialDelaySeconds: 10
            periodSeconds: 5
          livenessProbe:
            httpGet:
              path: /actuator/health
              port: 8080
            initialDelaySeconds: 30
            periodSeconds: 10
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: app-zgc
  namespace: gc-demo
spec:
  replicas: 1
  selector:
    matchLabels:
      app: perf-demo-zgc
      gc: zgc
  template:
    metadata:
      labels:
        app: perf-demo-zgc
        gc: zgc
        prometheus.io/scrape: "true"
        prometheus.io/port: "8080"
    spec:
      containers:
        - name: zgc-app
          image: load-app:latest
          imagePullPolicy: Never
          resources:
            requests:
              cpu: "500m"
              memory: "1Gi"
            limits:
              cpu: "1"
              memory: "1Gi"
          env:
            - name: JAVA_TOOL_OPTIONS
              value: "-Xms800m -Xmx800m -XX:+UseZGC"
          ports:
            - containerPort: 8080
          readinessProbe:
            httpGet:
              path: /actuator/health
              port: 8080
            initialDelaySeconds: 10
            periodSeconds: 5
          livenessProbe:
            httpGet:
              path: /actuator/health
              port: 8080
            initialDelaySeconds: 30
            periodSeconds: 10
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: app-shenandoah
  namespace: gc-demo
spec:
  replicas: 1
  selector:
    matchLabels:
      app: perf-demo-shenandoah
      gc: shenandoah
  template:
    metadata:
      labels:
        app: perf-demo-shenandoah
        gc: shenandoah
        prometheus.io/scrape: "true"
        prometheus.io/port: "8080"
    spec:
      containers:
        - name: shenandoah-app
          image: load-app:latest
          imagePullPolicy: Never
          resources:
            requests:
              cpu: "500m"
              memory: "1Gi"
            limits:
              cpu: "1"
              memory: "1Gi"
          env:
            - name: JAVA_TOOL_OPTIONS
              value: "-Xms1g -Xmx1g -XX:+UseShenandoahGC"
          ports:
            - containerPort: 8080
          readinessProbe:
            httpGet:
              path: /actuator/health
              port: 8080
            initialDelaySeconds: 10
            periodSeconds: 5
          livenessProbe:
            httpGet:
              path: /actuator/health
              port: 8080
            initialDelaySeconds: 30
            periodSeconds: 10
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: app-serial
  namespace: gc-demo
spec:
  replicas: 1
  selector:
    matchLabels:
      app: perf-demo-serial
      gc: serial
  template:
    metadata:
      labels:
        app: perf-demo-serial
        gc: serial
        prometheus.io/scrape: "true"
        prometheus.io/port: "8080"
    spec:
      containers:
        - name: serial-app
          image: load-app:latest
          imagePullPolicy: Never
          resources:
            requests:
              cpu: "500m"
              memory: "1Gi"
            limits:
              cpu: "1"
              memory: "1Gi"
          env:
            - name: JAVA_TOOL_OPTIONS
              value: "-Xms1g -Xmx1g -XX:+UseSerialGC"
          ports:
            - containerPort: 8080
          readinessProbe:
            httpGet:
              path: /actuator/health
              port: 8080
            initialDelaySeconds: 10
            periodSeconds: 5
          livenessProbe:
            httpGet:
              path: /actuator/health
              port: 8080
            initialDelaySeconds: 30
            periodSeconds: 10
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: app-parallel
  namespace: gc-demo
spec:
  replicas: 1
  selector:
    matchLabels:
      app: perf-demo-parallel
      gc: parallel
  template:
    metadata:
      labels:
        app: perf-demo-parallel
        gc: parallel
        prometheus.io/scrape: "true"
        prometheus.io/port: "8080"
    spec:
      containers:
        - name: parallel-app
          image: load-app:latest
          imagePullPolicy: Never
          resources:
            requests:
              cpu: "500m"
              memory: "1Gi"
            limits:
              cpu: "1"
              memory: "1Gi"
          env:
            - name: JAVA_TOOL_OPTIONS
              value: "-Xms1g -Xmx1g -XX:+UseParallelGC"
          ports:
            - containerPort: 8080
          readinessProbe:
            httpGet:
              path: /actuator/health
              port: 8080
            initialDelaySeconds: 10
            periodSeconds: 5
          livenessProbe:
            httpGet:
              path: /actuator/health
              port: 8080
            initialDelaySeconds: 30
            periodSeconds: 10
